<?php
/**
 * ProduitsApiInterface
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Server
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * BoulangerieApi
 *
 * The Boulangerie finally debugged for use, hosting service might need to be adapted
 *
 * OpenAPI spec version: 1.0.0
 * Contact: leafyteam@notaRealCompany.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Server\Api;

use Symfony\Component\HttpFoundation\File\UploadedFile;
use Swagger\Server\Model\InlineResponse2005;
use Swagger\Server\Model\Produits;

/**
 * ProduitsApiInterface Interface Doc Comment
 *
 * @category Interface
 * @package  Swagger\Server\Api
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
interface ProduitsApiInterface
{

    /**
     * Operation addProduit
     *
     * Add a new produit
     *
     * @param  Swagger\Server\Model\Produits $body  Produit object that needs to be added (required)
     * @param  integer $responseCode     The HTTP response code to return
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     *
     */
    public function addProduit(Produits $body, &$responseCode, array &$responseHeaders);

    /**
     * Operation deleteProduitByCodeProduit
     *
     * Deletes a produit by its code
     *
     * @param  int $codeProduit  Produit code to delete (required)
     * @param  integer $responseCode     The HTTP response code to return
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     *
     */
    public function deleteProduitByCodeProduit($codeProduit, &$responseCode, array &$responseHeaders);

    /**
     * Operation getCompositionsOfProduit
     *
     * get compositons filtered collection with quantity for a certain produit
     *
     * @param  int $codeProduit   (required)
     * @param  integer $responseCode     The HTTP response code to return
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return Swagger\Server\Model\InlineResponse2005[]
     *
     */
    public function getCompositionsOfProduit($codeProduit, &$responseCode, array &$responseHeaders);

    /**
     * Operation getProduitByCodeProduit
     *
     * get one produit
     *
     * @param  int $codeProduit   (required)
     * @param  integer $responseCode     The HTTP response code to return
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return Swagger\Server\Model\Produits[]
     *
     */
    public function getProduitByCodeProduit($codeProduit, &$responseCode, array &$responseHeaders);

    /**
     * Operation getProduits
     *
     * get all produits
     *
     * @param  integer $responseCode     The HTTP response code to return
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return Swagger\Server\Model\Produits[]
     *
     */
    public function getProduits(&$responseCode, array &$responseHeaders);

    /**
     * Operation updateAndReplaceProduit
     *
     * replaces Produit by Updated version
     *
     * @param  int $codeProduit   (required)
     * @param  Swagger\Server\Model\Produits $body  produit object to replace the one its (required)
     * @param  integer $responseCode     The HTTP response code to return
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     *
     */
    public function updateAndReplaceProduit($codeProduit, Produits $body, &$responseCode, array &$responseHeaders);
}
