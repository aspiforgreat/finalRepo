<?php
/**
 * CommandesBLApiInterface
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Server
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * BoulangerieApi
 *
 * The Boulangerie finally debugged for use, hosting service might need to be adapted
 *
 * OpenAPI spec version: 1.0.0
 * Contact: leafyteam@notaRealCompany.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Server\Api;

use Symfony\Component\HttpFoundation\File\UploadedFile;
use Swagger\Server\Model\CommandesBL;
use Swagger\Server\Model\InlineResponse2002;
use Swagger\Server\Model\InlineResponse2003;
use Swagger\Server\Model\InlineResponse2004;

/**
 * CommandesBLApiInterface Interface Doc Comment
 *
 * @category Interface
 * @package  Swagger\Server\Api
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
interface CommandesBLApiInterface
{

    /**
     * Operation addCommandeBL
     *
     * create an orderBL
     *
     * @param  Swagger\Server\Model\CommandesBL $body  CommandeBl object that needs to be added (required)
     * @param  integer $responseCode     The HTTP response code to return
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     *
     */
    public function addCommandeBL(CommandesBL $body, &$responseCode, array &$responseHeaders);

    /**
     * Operation commandesBLIdCommandeBLGet
     *
     * returns a commandeBL
     *
     * @param  int $idCommandeBL   (required)
     * @param  integer $responseCode     The HTTP response code to return
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return Swagger\Server\Model\CommandesBL[]
     *
     */
    public function commandesBLIdCommandeBLGet($idCommandeBL, &$responseCode, array &$responseHeaders);

    /**
     * Operation deleteCommandeBLById
     *
     * Deletes a commandeBL by Id
     *
     * @param  string $idCommandeBL  CommandeID  to delete (required)
     * @param  integer $responseCode     The HTTP response code to return
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     *
     */
    public function deleteCommandeBLById($idCommandeBL, &$responseCode, array &$responseHeaders);

    /**
     * Operation getCmdsByEtat
     *
     * returns commandes filtered collection for BL
     *
     * @param  string $etat   (optional)
     * @param  integer $responseCode     The HTTP response code to return
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return Swagger\Server\Model\InlineResponse2002[]
     *
     */
    public function getCmdsByEtat($etat = null, &$responseCode, array &$responseHeaders);

    /**
     * Operation getCmdsByEtatAndBoulangerieID
     *
     * get Commandes collection of the Boulangerie by Etat
     *
     * @param  string $etat   (optional)
     * @param  int $idBoulangerie   (optional)
     * @param  integer $responseCode     The HTTP response code to return
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return Swagger\Server\Model\CommandesBL[]
     *
     */
    public function getCmdsByEtatAndBoulangerieID($etat = null, $idBoulangerie = null, &$responseCode, array &$responseHeaders);

    /**
     * Operation getCmdsByEtatAndmatricule
     *
     * gets commandes collection by matricule for livreur
     *
     * @param  string $etat   (optional)
     * @param  int $matricule   (optional)
     * @param  integer $responseCode     The HTTP response code to return
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return Swagger\Server\Model\CommandesBL[]
     *
     */
    public function getCmdsByEtatAndmatricule($etat = null, $matricule = null, &$responseCode, array &$responseHeaders);

    /**
     * Operation getCmdsForLab
     *
     * gets commandes filtered for laboratoire
     *
     * @param  string $etat   (optional)
     * @param  integer $responseCode     The HTTP response code to return
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return Swagger\Server\Model\InlineResponse2003[]
     *
     */
    public function getCmdsForLab($etat = null, &$responseCode, array &$responseHeaders);

    /**
     * Operation getDetailsByCommandeBL
     *
     * @param  int $idCommandeBL   (required)
     * @param  integer $responseCode     The HTTP response code to return
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return Swagger\Server\Model\InlineResponse2004[]
     *
     */
    public function getDetailsByCommandeBL($idCommandeBL, &$responseCode, array &$responseHeaders);

    /**
     * Operation getcommandesBL
     *
     * @param  integer $responseCode     The HTTP response code to return
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return Swagger\Server\Model\CommandesBL[]
     *
     */
    public function getcommandesBL(&$responseCode, array &$responseHeaders);

    /**
     * Operation patchCmdBlEtat
     *
     * patching etat of a commandeBL objet
     *
     * @param  int $idCommandeBL   (required)
     * @param  string $etat   (optional)
     * @param  integer $responseCode     The HTTP response code to return
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     *
     */
    public function patchCmdBlEtat($idCommandeBL, $etat = null, &$responseCode, array &$responseHeaders);

    /**
     * Operation patchLivreur
     *
     * putting in the matricule of Livreur
     *
     * @param  int $idCommandeBL   (required)
     * @param  int $body   (required)
     * @param  integer $responseCode     The HTTP response code to return
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     *
     */
    public function patchLivreur($idCommandeBL, $body, &$responseCode, array &$responseHeaders);
}
